<?php
/*
 * This is part of jcubic/expression package
 * Copyright (c) 2024 Jakub T. Jankiewicz <https://jcu.bi>
 * Released under MIT license
 *
 * This is Expression class witch is an Adapter for the Parser generated by PEG
 */

namespace jcubic;

class Expression {
    private $constants;
    public $last_error = '';
    public $variables = [];
    public $functions = [];
    public $suppress_errors = false;
    private $expr = null;
    private $decimal_separator;
    function __construct($decimal_separator = '.') {
        $this->constants = ["e" => exp(1), "pi" => M_PI];
        $this->decimal_separator = $decimal_separator;
    }
    function evaluate($expr) {
        if (empty(trim($expr))) {
            return null;
        }
        $this->expr = new Parser($expr, $this->variables, $this->constants, $this->functions, $this->decimal_separator);
        try {
            $res = $this->expr->match_Start();
            if ($res === FALSE) {
                $this->error("invalid syntax $expr");
            }
            $this->variables = &$this->expr->variables;
            $this->functions = &$this->expr->functions;
            if ($this->expr->is_typed($res['val'])) {
                return $res['val']['value'];
            }
            return $res['val'];
        } catch (\Exception $e) {
            $this->error($e->getMessage() . " in expression: " . $expr);
        } catch (\Error $e) {
            $this->error($e->getMessage() . " in expression: " . $expr);
        }
    }
    private function error($message) {
        $this->last_error = $message;
        if (!$this->suppress_errors) {
            throw new \Exception($message);
        }
    }
}
